/*
//      _/      _/  _/_/_/  _/      _/  _/_/_/  _/      _/    _/_/_/
//     _/_/  _/_/    _/      _/  _/      _/    _/_/    _/  _/
//    _/  _/  _/    _/        _/        _/    _/  _/  _/    _/_/
//   _/      _/    _/      _/  _/      _/    _/    _/_/        _/
//  _/      _/  _/_/_/  _/      _/  _/_/_/  _/      _/  _/_/_/
*/

/* ==========================================================================
   Mixins
   ========================================================================== */

//@mixin transition($e:all,$t:150ms,$f:ease) { -moz-transition: $e $t $f; -webkit-transition: $e $t $f; transition: $e $t $f; }
@mixin transition_remove() { -moz-transition: none; -webkit-transition: none; transition: none; }
@mixin ellipsis() { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
@mixin plain { margin: 0; padding: 0; list-style: none; }
@mixin clearfix() { &:after { content: ""; display: table; clear: both; } }
@mixin flipit() { display: block; -webkit-transform: matrix(-1, 0, 0, 1, 0, 0); -moz-transform: matrix(-1, 0, 0, 1, 0, 0); -o-transform: matrix(-1, 0, 0, 1, 0, 0); transform: matrix(-1, 0, 0, 1, 0, 0); }
@mixin box-size($type) { @if $type == content { box-sizing: content-box; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; } @else if $type == border { box-sizing: border-box; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; } @else if $type == padding { box-sizing: padding-box; -webkit-box-sizing: padding-box; -moz-box-sizing: padding-box; } }
@mixin boop() { &:active { @include transform(translate3d(0, 1px, 0)); } }
@mixin align($dir) { position: absolute; @if $dir == vertical { top: 50%; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); } @else if $dir == horizontal { left: 50%; -webkit-transform: translateX(-50%); -ms-transform: translateX(-50%); transform: translateX(-50%); } @else if $dir == both { top: 50%; left: 50%; -webkit-transform: translateX(-50%) translateY(-50%); -ms-transform: translateX(-50%) translateY(-50%); transform: translateX(-50%) translateY(-50%); } }
@mixin rotate($degrees) { -webkit-transform: rotate($degrees); -moz-transform: rotate($degrees); -ms-transform: rotate($degrees); -o-transform: rotate($degrees); transform: rotate($degrees); -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{-1*sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})"; filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{-1*sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)}); }
@mixin znext($layer) { -webkit-transform:translateZ($layer + px); -moz-transform:translateZ($layer + px); -o-transform:translateZ($layer + px); transform:translateZ($layer + px); }
@mixin bw() { filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"); filter: gray; -webkit-filter: grayscale(100%); }
@mixin bw_remove() { filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"); -webkit-filter: grayscale(0%); }
@mixin space_letters($space:0.15) { letter-spacing: $space + rem; }
@mixin animate-display-on($t:.2s) { display: block; opacity: 1; @include animation(animate-display-on $t ease-in-out); }
@mixin animate-display-off($t:.2s) { display: none; opacity: 0; @include animation(animate-display-off $t ease-in-out); }
@keyframes animate-display-on {
  0% { display: none; opacity: 0; }
  1% { display: block; opacity: 0; }
  100% { opacity: 1; }
}
@keyframes animate-display-off {
  0% { display: block; opacity: 1; }
  99% { display: block; opacity: 0; }
  100% { display: none; }
}

/* ==========================================================================
   Media Queries
   ========================================================================== */

$bp0: 1140px;
$bp1: 980px;
$bp2: 840px;
$bp3: 720px;
$bp4: 680px;
$bp5: 600px; // Mobile Menu (Sm Tablet Portrait)
$bp6: 480px; // Mobile Landscape
$bp7: 320px; // Mobile Portrait

@mixin respond-to($bp) {
  @media only screen and (max-width: $bp) { @content; }
}
@mixin respond-above($bp) {
  @media only screen and (min-width: $bp) { @content; }
}
@mixin respond-to-height($bp) {
  @media only screen and (max-height: $bp) { @content; }
}
@mixin respond-above-height($bp) {
  @media only screen and (min-height: $bp) { @content; }
}
@mixin retina() {
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (   min--moz-device-pixel-ratio: 2),
    only screen and (     -o-min-device-pixel-ratio: 2/1),
    only screen and (        min-device-pixel-ratio: 2),
    only screen and (                min-resolution: 192dpi),
    only screen and (                min-resolution: 2dppx) { @content }
}
